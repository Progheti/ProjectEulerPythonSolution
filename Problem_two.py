# progheti 11/16/2023
# Problem 2
# Even Fibonacci Numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# starting with 1 and 2.
# find the sum of the even-valued terms that does not exceed 4 million.

def main():                                         #a function
    list=[1,2]                                      #list to store the numbers
    firstP=0                                        #the first position in the list
    secondP=1                                       #the second position in the list
    movingNumbers=0                                 #max value of the Fibonacci numbers
    while movingNumbers < 4000000:                  #loop that will continue until it hits the highest number 4 million
        movingNumbers=list[firstP]+list[secondP]    #the first and second position of the list added up
        if movingNumbers < 4000000:                 #check after adding the values if it equals less than 4 million
            list.append(movingNumbers)              #adds to list if it is
            firstP+=1                               #changes value to secondP
            secondP+=1                              #moves to next postion on list
    for each in list[:]:                            #loop to look through fresh list
        if each %2!=0:                              #look through each value to see if its not even
            list.remove(each)                       #removes odd numbers from list
    print(sum(list))                                #display the sum of the numbers in list to display
main()
